workflows:
  ios_ipa_unsigned:
    name: iOS — Unsigned IPA (FX LIVE)
    environment:
      flutter: stable
      xcode: 15.4
      cocoapods: default

    scripts:
      - name: Bootstrap Flutter
        script: |
          set -e
          flutter clean
          flutter create .
          flutter pub get

      - name: iOS permissions & ATS + set platform iOS 13
        script: |
          set -e
          INFO_PLIST="ios/Runner/Info.plist"
          # Photo Library usage text
          /usr/libexec/PlistBuddy -c "Add :NSPhotoLibraryUsageDescription string This app may access the photo library." "$INFO_PLIST" || \
          /usr/libexec/PlistBuddy -c "Set :NSPhotoLibraryUsageDescription This app may access the photo library." "$INFO_PLIST"

          # ATS: السماح باتصالات HTTP محلية (ws/http للخادم)
          /usr/libexec/PlistBuddy -c "Add :NSAppTransportSecurity dict" "$INFO_PLIST" || true
          /usr/libexec/PlistBuddy -c "Add :NSAppTransportSecurity:NSAllowsArbitraryLoads bool YES" "$INFO_PLIST" || \
          /usr/libexec/PlistBuddy -c "Set :NSAppTransportSecurity:NSAllowsArbitraryLoads YES" "$INFO_PLIST"

          # اضبط منصة iOS في Podfile إلى 13.0 لتفادي مشاكل البودز
          PODFILE="ios/Podfile"
          if grep -q "^platform :ios" "$PODFILE"; then
            sed -i '' "s/^platform :ios.*/platform :ios, '13.0'/" "$PODFILE"
          else
            printf "platform :ios, '13.0'\n%s" "$(cat "$PODFILE")" > "$PODFILE.tmp" && mv "$PODFILE.tmp" "$PODFILE"
          fi

      - name: CocoaPods repo update & install
        script: |
          set -e
          cd ios
          pod repo update
          pod install

      - name: Build iOS .app (no codesign)
        script: |
          set -e
          flutter build ios --release --no-codesign \
            --build-name=1.3.0 --build-number=$(date +%Y%m%d%H%M)

      - name: Package unsigned IPA from .app
        script: |
          set -e
          mkdir -p artifacts
          APP_PATH="$(find build/ios -type d -name '*.app' | head -n 1)"
          if [ -z "$APP_PATH" ]; then
            echo "No .app found"; exit 1
          fi
          TMPDIR="$CM_BUILD_DIR/tmp_payload"
          rm -rf "$TMPDIR"; mkdir -p "$TMPDIR/Payload"
          cp -R "$APP_PATH" "$TMPDIR/Payload/Runner.app"
          (cd "$TMPDIR" && zip -r "$CM_BUILD_DIR/artifacts/MDA.ipa" Payload)
          ls -la artifacts

    artifacts:
      - artifacts/*.ipa

  android_release:
    name: Android — Release APK (FX LIVE)
    environment:
      flutter: stable
      java: 17
    scripts:
      - name: Build
        script: |
          set -e
          flutter create .
          flutter pub get
          # السماح بالـ HTTP الصريح
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if ! grep -q 'usesCleartextTraffic' "$MANIFEST"; then
            sed -i '' 's/<application /<application android:usesCleartextTraffic="true" /' "$MANIFEST" || true
          fi
          flutter build apk --release --build-name=1.3.0 --build-number=$(date +%Y%m%d%H%M)
    artifacts:
      - build/app/outputs/**/*.apk
