workflows:
  ios_ipa_unsigned:
    name: iOS — Unsigned IPA (FX LIVE)
    environment:
      flutter: stable
      xcode: 15.4
      cocoapods: default

    scripts:
      - name: Bootstrap Flutter
        script: |
          set -e
          flutter clean
          flutter create .
          flutter pub get

      - name: iOS permissions & ATS + set platform iOS 13
        script: |
          set -e
          INFO_PLIST="ios/Runner/Info.plist"
          /usr/libexec/PlistBuddy -c "Add :NSPhotoLibraryUsageDescription string This app may access the photo library." "$INFO_PLIST" || \
          /usr/libexec/PlistBuddy -c "Set :NSPhotoLibraryUsageDescription This app may access the photo library." "$INFO_PLIST"
          /usr/libexec/PlistBuddy -c "Add :NSAppTransportSecurity dict" "$INFO_PLIST" || true
          /usr/libexec/PlistBuddy -c "Add :NSAppTransportSecurity:NSAllowsArbitraryLoads bool YES" "$INFO_PLIST" || \
          /usr/libexec/PlistBuddy -c "Set :NSAppTransportSecurity:NSAllowsArbitraryLoads YES" "$INFO_PLIST"

          PODFILE="ios/Podfile"
          if grep -q "^platform :ios" "$PODFILE"; then
            sed -i '' "s/^platform :ios.*/platform :ios, '13.0'/" "$PODFILE"
          else
            printf "platform :ios, '13.0'\n%s" "$(cat "$PODFILE")" > "$PODFILE.tmp" && mv "$PODFILE.tmp" "$PODFILE"
          fi

      - name: CocoaPods update & install
        script: |
          set -e
          cd ios
          pod repo update
          pod install

      - name: Build iOS app with xcodebuild (no signing)
        script: |
          set -e
          # نبقى في جذر المشروع
          xcodebuild \
            -workspace ios/Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -sdk iphoneos \
            -destination 'generic/platform=iOS' \
            -derivedDataPath build \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGNING_IDENTITY= \
            clean build

      - name: Package unsigned IPA
        script: |
          set -e
          mkdir -p artifacts
          APP_PATH="build/Build/Products/Release-iphoneos/Runner.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "Runner.app not found at $APP_PATH"; exit 1
          fi
          TMP="$CM_BUILD_DIR/tmp_payload"
          rm -rf "$TMP"; mkdir -p "$TMP/Payload"
          cp -R "$APP_PATH" "$TMP/Payload/Runner.app"
          (cd "$TMP" && zip -r "$CM_BUILD_DIR/artifacts/MDA.ipa" Payload)
          ls -la artifacts

    artifacts:
      - artifacts/*.ipa

  android_release:
    name: Android — Release APK (FX LIVE)
    environment:
      flutter: stable
      java: 17
    scripts:
      - name: Build
        script: |
          set -e
          flutter create .
          flutter pub get
          MANIFEST="android/app/src/main/AndroidManifest.xml"
          if ! grep -q 'usesCleartextTraffic' "$MANIFEST"; then
            sed -i '' 's/<application /<application android:usesCleartextTraffic="true" /' "$MANIFEST" || true
          fi
          flutter build apk --release --build-name=1.3.0 --build-number=$(date +%Y%m%d%H%M)
    artifacts:
      - build/app/outputs/**/*.apk
